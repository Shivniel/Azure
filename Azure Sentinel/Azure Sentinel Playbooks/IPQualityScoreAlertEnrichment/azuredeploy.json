{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "metadata": {
    "comments" : "IP Quality Score Alert Enrichment",
	"author": "Shivniel Gounder"
    },
    "parameters": {
	    "PlaybookName": {
            "defaultValue": "IPQualityScoreAlertEnrichment",
            "type": "string"
		
        },
        "IPQualityScoreAPI": {
            "defaultValue": "00000000-0000-0000-0000-000000000000",
            "type": "string"  

        },
        "DeployUserName": {
            "defaultValue": "<username>@<domain>",
            "type": "string"
        }

    },
    "variables": {
        "AzureSentinelConnectionName": "[concat('azuresentinel-', parameters('PlaybookName'))]"
    },
"resources": [
        {
            "type": "Microsoft.Web/connections",
            "apiVersion": "2016-06-01",
            "name": "[variables('AzureSentinelConnectionName')]",
            "location": "[resourceGroup().location]",
            "properties": {
                "displayName": "[parameters('DeployUserName')]",
                "customParameterValues": {},
                "api": {
                    "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/azuresentinel')]"
                }
            }
        },

        {
            "type": "Microsoft.Logic/workflows",
            "apiVersion": "2017-07-01",
            "name": "[parameters('PlaybookName')]",
            "location": "[resourceGroup().location]",
            			"tags": {
                "LogicAppsCategory": "security"
            },
			"dependsOn": [
                "[resourceId('Microsoft.Web/connections', variables('AzureSentinelConnectionName'))]"
                ],
            "properties": {
                "state": "Enabled",
                "definition": {
                    "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {
                        "$connections": {
                            "defaultValue": {},
                            "type": "Object"
                        }
                    },
                    "triggers": {
                        "When_a_response_to_an_Azure_Sentinel_alert_is_triggered": {
                            "type": "ApiConnectionWebhook",
                            "inputs": {
                                "body": {
                                    "callback_url": "@{listCallbackUrl()}"
                                },
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                    }
                                },
                                "path": "/subscribe"
                            }
                        }
                    },
                    "actions": {
                        "Alert_-_Get_incident": {
                            "runAfter": {},
                            "type": "ApiConnection",
                            "inputs": {
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                    }
                                },
                                "method": "get",
                                "path": "/Incidents/subscriptions/@{encodeURIComponent(triggerBody()?['WorkspaceSubscriptionId'])}/resourceGroups/@{encodeURIComponent(triggerBody()?['WorkspaceResourceGroup'])}/workspaces/@{encodeURIComponent(triggerBody()?['WorkspaceId'])}/alerts/@{encodeURIComponent(triggerBody()?['SystemAlertId'])}"
                            }
                        },
                        "Entities_-_Get_Accounts": {
                            "runAfter": {
                                "Entities_-_Get_IPs": [
                                    "Succeeded"
                                ]
                            },
                            "type": "ApiConnection",
                            "inputs": {
                                "body": "@triggerBody()?['Entities']",
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                    }
                                },
                                "method": "post",
                                "path": "/entities/account"
                            }
                        },
                        "Entities_-_Get_IPs": {
                            "runAfter": {
                                "Alert_-_Get_incident": [
                                    "Succeeded"
                                ]
                            },
                            "type": "ApiConnection",
                            "inputs": {
                                "body": "@triggerBody()?['Entities']",
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                    }
                                },
                                "method": "post",
                                "path": "/entities/ip"
                            }
                        },
                        "IPQualityScore": {
                            "foreach": "@body('Entities_-_Get_IPs')?['IPs']",
                            "actions": {
                                "Add_comment_to_incident_(V3)": {
                                    "runAfter": {
                                        "Parse_JSON": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "ApiConnection",
                                    "inputs": {
                                        "body": {
                                            "incidentArmId": "@body('Alert_-_Get_incident')?['id']",
                                            "message": "<p><strong>IP Health Score:</strong><br>\n<br>\nIP: &nbsp;@{items('IPQualityScore')?['Address']}<br>\n<br>\nISP: @{body('Parse_JSON')?['ISP']}<br>\n<br>\nCity: @{body('Parse_JSON')?['city']}<br>\n<br>\nOrganisation: @{body('Parse_JSON')?['organization']}<br>\n<br>\nFraud Score: @{body('Parse_JSON')?['fraud_score']}<br>\n</p>"
                                        },
                                        "host": {
                                            "connection": {
                                                "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                            }
                                        },
                                        "method": "post",
                                        "path": "/Incidents/Comment"
                                    }
                                },
                                "HTTP": {
                                    "runAfter": {},
                                    "type": "Http",
                                    "inputs": {
                                        "method": "GET",
                                        "uri": "https://ipqualityscore.com/api/json/ip/@{variables('IPQualityScoreAPI')}/@{items('IPQualityScore')?['Address']}/?strictness=0&allow_public_access_points=true&fast=true&lighter_penalties=true&mobile=true"
                                    }
                                },
                                "Parse_JSON": {
                                    "runAfter": {
                                        "HTTP": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "ParseJson",
                                    "inputs": {
                                        "content": "@body('HTTP')",
                                        "schema": {
                                            "properties": {
                                                "ASN": {
                                                    "type": "integer"
                                                },
                                                "ISP": {
                                                    "type": "string"
                                                },
                                                "abuse_velocity": {
                                                    "type": "string"
                                                },
                                                "active_tor": {
                                                    "type": "boolean"
                                                },
                                                "active_vpn": {
                                                    "type": "boolean"
                                                },
                                                "bot_status": {
                                                    "type": "boolean"
                                                },
                                                "city": {
                                                    "type": "string"
                                                },
                                                "connection_type": {
                                                    "type": "string"
                                                },
                                                "country_code": {
                                                    "type": "string"
                                                },
                                                "fraud_score": {
                                                    "type": "integer"
                                                },
                                                "host": {
                                                    "type": "string"
                                                },
                                                "is_crawler": {
                                                    "type": "boolean"
                                                },
                                                "latitude": {
                                                    "type": "number"
                                                },
                                                "longitude": {
                                                    "type": "number"
                                                },
                                                "message": {
                                                    "type": "string"
                                                },
                                                "mobile": {
                                                    "type": "boolean"
                                                },
                                                "organization": {
                                                    "type": "string"
                                                },
                                                "proxy": {
                                                    "type": "boolean"
                                                },
                                                "recent_abuse": {
                                                    "type": "boolean"
                                                },
                                                "region": {
                                                    "type": "string"
                                                },
                                                "request_id": {
                                                    "type": "string"
                                                },
                                                "success": {
                                                    "type": "boolean"
                                                },
                                                "timezone": {
                                                    "type": "string"
                                                },
                                                "tor": {
                                                    "type": "boolean"
                                                },
                                                "vpn": {
                                                    "type": "boolean"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    }
                                }
                            },
                            "runAfter": {
                                "IPQualityScoreAPI": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Foreach"
                        },
                        "IPQualityScoreAPI": {
                            "runAfter": {
                                "Entities_-_Get_Accounts": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "IPQualityScoreAPI",
                                        "type": "string",
                                        "value": "[parameters('IPQualityScoreAPI')]"
                                    }
                                ]
                            }
                        }
                    },
                    "outputs": {}
                },
                "parameters": {
                    "$connections": {
                        "value": {
                            "azuresentinel":{
                                "connectionId": "[resourceId('Microsoft.Web/connections', variables('AzureSentinelConnectionName'))]",
                                "connectionName": "[variables('AzureSentinelConnectionName')]",
                                "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/azuresentinel')]"
                            }
                        }
                    }
                }
            }
        }
    ]
}
