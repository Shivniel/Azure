{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "metadata": {
    "comments" : "Azure Sentinel playbook to send approval request to the SOC team to approve incident response actions",
	"author": "Shivniel Gounder"
    },
    "parameters": {
	    "PlaybookName": {
            "defaultValue": "MDATP_InitialTriage",
            "type": "string"
		
        },
        "VirusTotalAPIKey": {
            "defaultValue": "00000000-0000-0000-0000-000000000000",
            "type": "string"  

        },
        "SOCEmailAddress": {
            "defaultValue": "soc@domain.com",
            "type": "string"
        },
        "SentinelRG": {
        "defaultValue": "SentinelRG",
        "type": "string"
		},
	    "SentinelWSName": {
            "defaultValue": "SentinelWSName",
            "type": "string"
		},
		"SentinelSubID": {
            "defaultValue": "00000000-0000-0000-0000-000000000000",
            "type": "string"			
        }
    },
    "variables": {
        "AzureSentinelConnectionName": "[concat('azuresentinel-', parameters('PlaybookName'))]",
        "MDATPConnectionName": "[concat('wdatp-', parameters('PlaybookName'))]",
        "AADConnectionName": "[concat('azuread-', parameters('PlaybookName'))]",
        "Office365ConnectionName": "[concat('office365-', parameters('PlaybookName'))]"
    },
"resources": [
        {
            "type": "Microsoft.Web/connections",
            "apiVersion": "2016-06-01",
            "name": "[variables('AzureSentinelConnectionName')]",
            "location": "[resourceGroup().location]",
            "properties": {
                "state": "Enabled",
                "definition": {
                    "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {
                        "$connections": {
                            "defaultValue": {},
                            "type": "Object"
                        }
                    },
                    "triggers": {
                        "When_Azure_Sentinel_incident_creation_rule_was_triggered_(Private_Preview_only)": {
                            "type": "ApiConnectionWebhook",
                            "inputs": {
                                "body": {
                                    "callback_url": "@{listCallbackUrl()}"
                                },
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                    }
                                },
                                "path": "/incident-creation"
                            }
                        }
                    },
                    "actions": {
                        "Actions_-_Get_single_investigation": {
                            "runAfter": {
                                "Alerts_-_Get_single_alert": [
                                    "Succeeded"
                                ]
                            },
                            "type": "ApiConnection",
                            "inputs": {
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['wdatp']['connectionId']"
                                    }
                                },
                                "method": "get",
                                "path": "/api/investigations/@{encodeURIComponent(body('Alerts_-_Get_single_alert')?['investigationId'])}"
                            }
                        },
                        "Alerts_-_Get_single_alert": {
                            "runAfter": {
                                "Entities_-_Get_Accounts": [
                                    "Succeeded"
                                ]
                            },
                            "type": "ApiConnection",
                            "inputs": {
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['wdatp']['connectionId']"
                                    }
                                },
                                "method": "get",
                                "path": "/api/alerts/@{encodeURIComponent(triggerBody()?['ProviderAlertId'])}"
                            }
                        },
                        "Entities_-_Get_Accounts": {
                            "runAfter": {
                                "GetIncident": [
                                    "Succeeded"
                                ]
                            },
                            "type": "ApiConnection",
                            "inputs": {
                                "body": "@triggerBody()?['object']?['properties']?['relatedEntities']",
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                    }
                                },
                                "method": "post",
                                "path": "/entities/account"
                            }
                        },
                        "Entities_-_Get_FileHashes": {
                            "runAfter": {
                                "Actions_-_Get_single_investigation": [
                                    "Succeeded"
                                ]
                            },
                            "type": "ApiConnection",
                            "inputs": {
                                "body": "@triggerBody()?['object']?['properties']?['relatedEntities']",
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                    }
                                },
                                "method": "post",
                                "path": "/entities/filehash"
                            }
                        },
                        "GetIncident": {
                            "foreach": "@triggerBody()?['object']?['properties']?['Alerts']",
                            "actions": {
                                "Alert_-_Get_incident": {
                                    "runAfter": {},
                                    "type": "ApiConnection",
                                    "inputs": {
                                        "host": {
                                            "connection": {
                                                "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                            }
                                        },
                                        "method": "get",
                                        "path": "/Incidents/subscriptions/@{encodeURIComponent(triggerBody()?['workspaceInfo']?['SubscriptionId'])}/resourceGroups/@{encodeURIComponent(triggerBody()?['workspaceInfo']?['ResourceGroupName'])}/workspaces/@{encodeURIComponent(triggerBody()?['workspaceId'])}/alerts/@{encodeURIComponent(items('GetIncident')?['properties']?['systemAlertId'])}"
                                    }
                                }
                            },
                            "runAfter": {},
                            "type": "Foreach"
                        },
                        "InitializeIP": {
                            "runAfter": {
                                "InitializeVirusTotalAPI": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "IP",
                                        "type": "string"
                                    }
                                ]
                            }
                        },
                        "InitializeIPArray": {
                            "runAfter": {
                                "InitializeIP": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "IPArray",
                                        "type": "array",
                                        "value": "@triggerBody()?['object']?['properties']?['relatedEntities']"
                                    }
                                ]
                            }
                        },
                        "InitializeMDATPDeviceID": {
                            "runAfter": {
                                "InitializeMDATPDeviceName": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "MDATPDeviceID",
                                        "type": "string"
                                    }
                                ]
                            }
                        },
                        "InitializeMDATPDeviceName": {
                            "runAfter": {
                                "InitializeMDATPVulnDev": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "MDATPDeviceName",
                                        "type": "string"
                                    }
                                ]
                            }
                        },
                        "InitializeMDATPVulnDev": {
                            "runAfter": {
                                "Parse_JSON": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "MDATPVulnDev",
                                        "type": "string"
                                    }
                                ]
                            }
                        },
                        "InitializeVirusTotalAPI": {
                            "runAfter": {
                                "Entities_-_Get_FileHashes": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "VTAPIKey",
                                        "type": "string",
                                        "value": "[parameters('VirusTotalAPIKey')]"
                                    }
                                ]
                            }
                        },
                        "Parse_JSON": {
                            "runAfter": {
                                "InitializeIPArray": [
                                    "Succeeded"
                                ]
                            },
                            "type": "ParseJson",
                            "inputs": {
                                "content": "@variables('IPArray')",
                                "schema": {
                                    "items": {
                                        "properties": {
                                            "$id": {
                                                "type": "string"
                                            },
                                            "$ref": {
                                                "type": "string"
                                            },
                                            "AadDeviceId": {},
                                            "CommandLine": {
                                                "type": "string"
                                            },
                                            "CreatedTimeUtc": {
                                                "type": "string"
                                            },
                                            "CreationTimeUtc": {
                                                "type": "string"
                                            },
                                            "ElevationToken": {
                                                "type": "string"
                                            },
                                            "FQDN": {
                                                "type": "string"
                                            },
                                            "HealthStatus": {
                                                "type": "string"
                                            },
                                            "HostName": {
                                                "type": "string"
                                            },
                                            "ImageFile": {
                                                "properties": {
                                                    "$id": {
                                                        "type": "string"
                                                    },
                                                    "CreatedTimeUtc": {
                                                        "type": "string"
                                                    },
                                                    "Directory": {
                                                        "type": "string"
                                                    },
                                                    "FileHashes": {
                                                        "items": {
                                                            "properties": {
                                                                "$id": {
                                                                    "type": "string"
                                                                },
                                                                "Algorithm": {
                                                                    "type": "string"
                                                                },
                                                                "Type": {
                                                                    "type": "string"
                                                                },
                                                                "Value": {
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "required": [
                                                                "$id",
                                                                "Algorithm",
                                                                "Value",
                                                                "Type"
                                                            ],
                                                            "type": "object"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "Name": {
                                                        "type": "string"
                                                    },
                                                    "Type": {
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "IsDomainJoined": {
                                                "type": "boolean"
                                            },
                                            "LastExternalIpAddress": {
                                                "type": "string"
                                            },
                                            "LastIpAddress": {
                                                "type": "string"
                                            },
                                            "LastSeen": {
                                                "type": "string"
                                            },
                                            "MdatpDeviceId": {
                                                "type": "string"
                                            },
                                            "NTDomain": {
                                                "type": "string"
                                            },
                                            "Name": {
                                                "type": "string"
                                            },
                                            "OSFamily": {
                                                "type": "string"
                                            },
                                            "OSVersion": {
                                                "type": "string"
                                            },
                                            "ParentProcess": {
                                                "properties": {
                                                    "$id": {
                                                        "type": "string"
                                                    },
                                                    "CommandLine": {
                                                        "type": "string"
                                                    },
                                                    "CreatedTimeUtc": {
                                                        "type": "string"
                                                    },
                                                    "CreationTimeUtc": {
                                                        "type": "string"
                                                    },
                                                    "ImageFile": {
                                                        "properties": {
                                                            "$id": {
                                                                "type": "string"
                                                            },
                                                            "CreatedTimeUtc": {
                                                                "type": "string"
                                                            },
                                                            "Directory": {
                                                                "type": "string"
                                                            },
                                                            "FileHashes": {
                                                                "items": {
                                                                    "properties": {
                                                                        "$id": {
                                                                            "type": "string"
                                                                        },
                                                                        "Algorithm": {
                                                                            "type": "string"
                                                                        },
                                                                        "Type": {
                                                                            "type": "string"
                                                                        },
                                                                        "Value": {
                                                                            "type": "string"
                                                                        }
                                                                    },
                                                                    "required": [
                                                                        "$id",
                                                                        "Algorithm",
                                                                        "Value",
                                                                        "Type"
                                                                    ],
                                                                    "type": "object"
                                                                },
                                                                "type": "array"
                                                            },
                                                            "Name": {
                                                                "type": "string"
                                                            },
                                                            "Type": {
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "ProcessId": {
                                                        "type": "string"
                                                    },
                                                    "Type": {
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "ProcessId": {
                                                "type": "string"
                                            },
                                            "RiskScore": {
                                                "type": "string"
                                            },
                                            "Sid": {
                                                "type": "string"
                                            },
                                            "Tags": {
                                                "type": "array"
                                            },
                                            "Type": {
                                                "type": "string"
                                            }
                                        },
                                        "required": [],
                                        "type": "object"
                                    },
                                    "type": "array"
                                }
                            }
                        },
                        "Sentinel_Severity_Condition": {
                            "actions": {
                                "Add_comment_to_incident_(V3)": {
                                    "runAfter": {
                                        "DefenderHunting": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "ApiConnection",
                                    "inputs": {
                                        "body": {
                                            "incidentArmId": "@triggerBody()?['object']?['id']",
                                            "message": "<p>MDATP Results:<br>\n<br>\nThe hash values were detected on the following devices (Device name, Device ID):<br>\n<br>\nDeviceName: @{variables('MDATPDeviceName')}<br>\n<br>\nDeviceID: @{variables('MDATPDeviceID')}</p>"
                                        },
                                        "host": {
                                            "connection": {
                                                "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                            }
                                        },
                                        "method": "post",
                                        "path": "/Incidents/Comment"
                                    }
                                },
                                "Condition_-_Approval_Email": {
                                    "actions": {
                                        "Actions_-_Isolate_machine": {
                                            "runAfter": {},
                                            "type": "ApiConnection",
                                            "inputs": {
                                                "body": {
                                                    "Comment": "Sentinel ID: @{triggerBody()?['object']?['properties']?['incidentNumber']}",
                                                    "IsolationType": "Full"
                                                },
                                                "host": {
                                                    "connection": {
                                                        "name": "@parameters('$connections')['wdatp']['connectionId']"
                                                    }
                                                },
                                                "method": "post",
                                                "path": "/api/machines/@{encodeURIComponent(body('Actions_-_Get_single_investigation')?['machineId'])}/isolate"
                                            }
                                        }
                                    },
                                    "runAfter": {
                                        "Send_approval_email": [
                                            "Succeeded"
                                        ]
                                    },
                                    "expression": {
                                        "and": [
                                            {
                                                "equals": [
                                                    "@body('Send_approval_email')",
                                                    "Approve"
                                                ]
                                            }
                                        ]
                                    },
                                    "type": "If"
                                },
                                "DefenderHunting": {
                                    "foreach": "@body('Entities_-_Get_FileHashes')?['Filehashes']",
                                    "actions": {
                                        "ParseDefenderHunting": {
                                            "runAfter": {
                                                "Run_query_and_list_results": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type": "ParseJson",
                                            "inputs": {
                                                "content": "@body('Run_query_and_list_results')?['value']",
                                                "schema": {
                                                    "items": {
                                                        "properties": {
                                                            "DeviceId": {
                                                                "type": "string"
                                                            },
                                                            "DeviceName": {
                                                                "type": "string"
                                                            }
                                                        },
                                                        "required": [
                                                            "DeviceName",
                                                            "DeviceId"
                                                        ],
                                                        "type": "object"
                                                    },
                                                    "type": "array"
                                                }
                                            }
                                        },
                                        "Run_query_and_list_results": {
                                            "runAfter": {},
                                            "type": "ApiConnection",
                                            "inputs": {
                                                "body": "let fileHash = \"@{items('DefenderHunting')?['Value']}\";\nfind in (DeviceFileEvents, DeviceProcessEvents, DeviceEvents, DeviceRegistryEvents, DeviceNetworkEvents, DeviceImageLoadEvents)\nwhere SHA1 == fileHash or InitiatingProcessSHA1 == fileHash\n|distinct DeviceName, DeviceId",
                                                "host": {
                                                    "connection": {
                                                        "name": "@parameters('$connections')['azuremonitorlogs']['connectionId']"
                                                    }
                                                },
                                                "method": "post",
                                                "path": "/queryData",
                                                "queries": {
                                                    "resourcegroups": "[parameters('SentinelRG')]",
                                                    "resourcename": "[parameters('SentinelWSName')]",
                                                    "resourcetype": "Log Analytics Workspace",
                                                    "subscriptions": "[parameters('SentinelSubID')]",
                                                    "timerange": "ago(3d)"
                                                }
                                            }
                                        },
                                        "SetDeviceMonitorID": {
                                            "foreach": "@body('ParseDefenderHunting')",
                                            "actions": {
                                                "SetDeviceID": {
                                                    "runAfter": {},
                                                    "type": "SetVariable",
                                                    "inputs": {
                                                        "name": "MDATPDeviceID",
                                                        "value": "@items('SetDeviceMonitorID')['DeviceId']"
                                                    }
                                                }
                                            },
                                            "runAfter": {
                                                "SetDeviceMonitorName": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type": "Foreach"
                                        },
                                        "SetDeviceMonitorName": {
                                            "foreach": "@body('ParseDefenderHunting')",
                                            "actions": {
                                                "SetDeviceName": {
                                                    "runAfter": {},
                                                    "type": "SetVariable",
                                                    "inputs": {
                                                        "name": "MDATPDeviceName",
                                                        "value": "@items('SetDeviceMonitorName')['DeviceName']"
                                                    }
                                                }
                                            },
                                            "runAfter": {
                                                "ParseDefenderHunting": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type": "Foreach"
                                        }
                                    },
                                    "runAfter": {},
                                    "type": "Foreach"
                                },
                                "Send_approval_email": {
                                    "runAfter": {
                                        "Add_comment_to_incident_(V3)": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "ApiConnectionWebhook",
                                    "inputs": {
                                        "body": {
                                            "Message": {
                                                "Body": "MDATP Results:\n\nThe hash values were detected on the following devices (Device name, Device ID):\n\nDeviceName: @{variables('MDATPDeviceName')}\n\nDeviceID: @{variables('MDATPDeviceID')}\n\nTo isolate the device, please Approve the action, otherwise select reject. ",
                                                "HideHTMLMessage": false,
                                                "Importance": "Normal",
                                                "Options": "Approve, Reject",
                                                "ShowHTMLConfirmationDialog": false,
                                                "Subject": "Azure Sentinel @{triggerBody()?['object']?['properties']?['incidentNumber']} - Approval Request",
                                                "To": "[parameters('SOCEmailAddress')]"
                                            },
                                            "NotificationUrl": "@{listCallbackUrl()}"
                                        },
                                        "host": {
                                            "connection": {
                                                "name": "@parameters('$connections')['office365_1']['connectionId']"
                                            }
                                        },
                                        "path": "/approvalmail/$subscriptions"
                                    }
                                }
                            },
                            "runAfter": {
                                "InitializeMDATPDeviceID": [
                                    "Succeeded"
                                ]
                            },
                            "expression": {
                                "and": [
                                    {
                                        "not": {
                                            "equals": [
                                                "@triggerBody()?['object']?['properties']?['severity']",
                                                "Informational"
                                            ]
                                        }
                                    }
                                ]
                            },
                            "type": "If"
                        }
                    },
                    "outputs": {}
                },
                "parameters": {
                    "$connections": {
                        "value": {
                            "azuread": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', variables('AADConnectionName'))]",
                                "connectionName": "[variables('AADConnectionName')]",
                                "id":"[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/azuread')]"
                                
                            },
                            "azuresentinel":{
                                "connectionId": "[resourceId('Microsoft.Web/connections', variables('AzureSentinelConnectionName'))]",
                                "connectionName": "[variables('AzureSentinelConnectionName')]",
                                "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/azuresentinel')]"
                            },
                            "office365": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', variables('Office365ConnectionName'))]",
                                "connectionName": "[variables('Office365ConnectionName')]",
                                "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/office365')]"
                            },
                            "wdatp": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', variables('MDATPConnectionName'))]",
                                "connectionName": "[variables('MDATPConnectionName')]",
                                "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/wdatp')]"
                            }
                        }
                    }
                }
            }
        }
    ]
}
